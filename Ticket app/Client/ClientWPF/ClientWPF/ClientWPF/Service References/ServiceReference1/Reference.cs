//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.17929
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientWPF.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransportItem", Namespace="http://schemas.datacontract.org/2004/07/TicketServiceWCF")]
    [System.SerializableAttribute()]
    public partial class TransportItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CarriageNumberItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CostItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientWPF.ServiceReference1.TRoutesItemEntity RouteItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeatsCountItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransportItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientWPF.ServiceReference1.TransportTypeItem TransportsTypeItemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CarriageNumberItem {
            get {
                return this.CarriageNumberItemField;
            }
            set {
                if ((this.CarriageNumberItemField.Equals(value) != true)) {
                    this.CarriageNumberItemField = value;
                    this.RaisePropertyChanged("CarriageNumberItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CostItem {
            get {
                return this.CostItemField;
            }
            set {
                if ((this.CostItemField.Equals(value) != true)) {
                    this.CostItemField = value;
                    this.RaisePropertyChanged("CostItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientWPF.ServiceReference1.TRoutesItemEntity RouteItem {
            get {
                return this.RouteItemField;
            }
            set {
                if ((object.ReferenceEquals(this.RouteItemField, value) != true)) {
                    this.RouteItemField = value;
                    this.RaisePropertyChanged("RouteItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeatsCountItem {
            get {
                return this.SeatsCountItemField;
            }
            set {
                if ((this.SeatsCountItemField.Equals(value) != true)) {
                    this.SeatsCountItemField = value;
                    this.RaisePropertyChanged("SeatsCountItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransportItemID {
            get {
                return this.TransportItemIDField;
            }
            set {
                if ((this.TransportItemIDField.Equals(value) != true)) {
                    this.TransportItemIDField = value;
                    this.RaisePropertyChanged("TransportItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientWPF.ServiceReference1.TransportTypeItem TransportsTypeItem {
            get {
                return this.TransportsTypeItemField;
            }
            set {
                if ((object.ReferenceEquals(this.TransportsTypeItemField, value) != true)) {
                    this.TransportsTypeItemField = value;
                    this.RaisePropertyChanged("TransportsTypeItem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TRoutesItemEntity", Namespace="http://schemas.datacontract.org/2004/07/TicketServiceWCF")]
    [System.SerializableAttribute()]
    public partial class TRoutesItemEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ArrivalItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DepartureItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientWPF.ServiceReference1.CitesItemEntity FromCityItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriceItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TRoutesItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientWPF.ServiceReference1.CitesItemEntity ToCityItemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ArrivalItem {
            get {
                return this.ArrivalItemField;
            }
            set {
                if ((this.ArrivalItemField.Equals(value) != true)) {
                    this.ArrivalItemField = value;
                    this.RaisePropertyChanged("ArrivalItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DepartureItem {
            get {
                return this.DepartureItemField;
            }
            set {
                if ((this.DepartureItemField.Equals(value) != true)) {
                    this.DepartureItemField = value;
                    this.RaisePropertyChanged("DepartureItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientWPF.ServiceReference1.CitesItemEntity FromCityItem {
            get {
                return this.FromCityItemField;
            }
            set {
                if ((object.ReferenceEquals(this.FromCityItemField, value) != true)) {
                    this.FromCityItemField = value;
                    this.RaisePropertyChanged("FromCityItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PriceItem {
            get {
                return this.PriceItemField;
            }
            set {
                if ((this.PriceItemField.Equals(value) != true)) {
                    this.PriceItemField = value;
                    this.RaisePropertyChanged("PriceItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TRoutesItemID {
            get {
                return this.TRoutesItemIDField;
            }
            set {
                if ((this.TRoutesItemIDField.Equals(value) != true)) {
                    this.TRoutesItemIDField = value;
                    this.RaisePropertyChanged("TRoutesItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientWPF.ServiceReference1.CitesItemEntity ToCityItem {
            get {
                return this.ToCityItemField;
            }
            set {
                if ((object.ReferenceEquals(this.ToCityItemField, value) != true)) {
                    this.ToCityItemField = value;
                    this.RaisePropertyChanged("ToCityItem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransportTypeItem", Namespace="http://schemas.datacontract.org/2004/07/TicketServiceWCF")]
    [System.SerializableAttribute()]
    public partial class TransportTypeItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransportItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransportTypeNameItemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransportItemID {
            get {
                return this.TransportItemIDField;
            }
            set {
                if ((this.TransportItemIDField.Equals(value) != true)) {
                    this.TransportItemIDField = value;
                    this.RaisePropertyChanged("TransportItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransportTypeNameItem {
            get {
                return this.TransportTypeNameItemField;
            }
            set {
                if ((object.ReferenceEquals(this.TransportTypeNameItemField, value) != true)) {
                    this.TransportTypeNameItemField = value;
                    this.RaisePropertyChanged("TransportTypeNameItem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CitesItemEntity", Namespace="http://schemas.datacontract.org/2004/07/TicketServiceWCF")]
    [System.SerializableAttribute()]
    public partial class CitesItemEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CityItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CityItemID {
            get {
                return this.CityItemIDField;
            }
            set {
                if ((this.CityItemIDField.Equals(value) != true)) {
                    this.CityItemIDField = value;
                    this.RaisePropertyChanged("CityItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SeatsItemEntity", Namespace="http://schemas.datacontract.org/2004/07/TicketServiceWCF")]
    [System.SerializableAttribute()]
    public partial class SeatsItemEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeatNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeatStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeatsItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransportIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeatNumber {
            get {
                return this.SeatNumberField;
            }
            set {
                if ((this.SeatNumberField.Equals(value) != true)) {
                    this.SeatNumberField = value;
                    this.RaisePropertyChanged("SeatNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SeatState {
            get {
                return this.SeatStateField;
            }
            set {
                if ((object.ReferenceEquals(this.SeatStateField, value) != true)) {
                    this.SeatStateField = value;
                    this.RaisePropertyChanged("SeatState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeatsItemID {
            get {
                return this.SeatsItemIDField;
            }
            set {
                if ((this.SeatsItemIDField.Equals(value) != true)) {
                    this.SeatsItemIDField = value;
                    this.RaisePropertyChanged("SeatsItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransportID {
            get {
                return this.TransportIDField;
            }
            set {
                if ((this.TransportIDField.Equals(value) != true)) {
                    this.TransportIDField = value;
                    this.RaisePropertyChanged("TransportID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ITicketService", CallbackContract=typeof(ClientWPF.ServiceReference1.ITicketServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface ITicketService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketService/GetRoutes", ReplyAction="http://tempuri.org/ITicketService/GetRoutesResponse")]
        ClientWPF.ServiceReference1.TransportItem[] GetRoutes(string cityFrom, string cityTo, System.DateTime fromId, System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketService/GetRoutes", ReplyAction="http://tempuri.org/ITicketService/GetRoutesResponse")]
        System.Threading.Tasks.Task<ClientWPF.ServiceReference1.TransportItem[]> GetRoutesAsync(string cityFrom, string cityTo, System.DateTime fromId, System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketService/GetCity", ReplyAction="http://tempuri.org/ITicketService/GetCityResponse")]
        string[] GetCity();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketService/GetCity", ReplyAction="http://tempuri.org/ITicketService/GetCityResponse")]
        System.Threading.Tasks.Task<string[]> GetCityAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketService/GetSeats", ReplyAction="http://tempuri.org/ITicketService/GetSeatsResponse")]
        ClientWPF.ServiceReference1.SeatsItemEntity[] GetSeats(int transportId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketService/GetSeats", ReplyAction="http://tempuri.org/ITicketService/GetSeatsResponse")]
        System.Threading.Tasks.Task<ClientWPF.ServiceReference1.SeatsItemEntity[]> GetSeatsAsync(int transportId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITicketServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketService/RefreshSeats", ReplyAction="http://tempuri.org/ITicketService/RefreshSeatsResponse")]
        void RefreshSeats();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITicketServiceChannel : ClientWPF.ServiceReference1.ITicketService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TicketServiceClient : System.ServiceModel.DuplexClientBase<ClientWPF.ServiceReference1.ITicketService>, ClientWPF.ServiceReference1.ITicketService {
        
        public TicketServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public TicketServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public TicketServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public TicketServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public TicketServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public ClientWPF.ServiceReference1.TransportItem[] GetRoutes(string cityFrom, string cityTo, System.DateTime fromId, System.Guid guid) {
            return base.Channel.GetRoutes(cityFrom, cityTo, fromId, guid);
        }
        
        public System.Threading.Tasks.Task<ClientWPF.ServiceReference1.TransportItem[]> GetRoutesAsync(string cityFrom, string cityTo, System.DateTime fromId, System.Guid guid) {
            return base.Channel.GetRoutesAsync(cityFrom, cityTo, fromId, guid);
        }
        
        public string[] GetCity() {
            return base.Channel.GetCity();
        }
        
        public System.Threading.Tasks.Task<string[]> GetCityAsync() {
            return base.Channel.GetCityAsync();
        }
        
        public ClientWPF.ServiceReference1.SeatsItemEntity[] GetSeats(int transportId) {
            return base.Channel.GetSeats(transportId);
        }
        
        public System.Threading.Tasks.Task<ClientWPF.ServiceReference1.SeatsItemEntity[]> GetSeatsAsync(int transportId) {
            return base.Channel.GetSeatsAsync(transportId);
        }
    }
}
